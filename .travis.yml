language: cpp
dist: xenial
sudo: required
group: edge

matrix:
  include:

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-5
      - CXX_STANDARD=11
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-5
      - CXX_STANDARD=14
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-5
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-6
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-7
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'ninja-build']

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-8
      - CXX_STANDARD=17
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8', 'ninja-build', 'libstdc++-8-dev']

    # Coveralls (TODO)
  #- os: linux
    #compiler: gcc
    #addons:
      #apt:
        #sources: ['ubuntu-toolchain-r-test']
        #packages: ['g++-5', 'ninja-build']

    #before_script:
      #- pip install --user cpp-coveralls
    #after_success:
      #- coveralls --build-root build/tests --include include --gcov 'gcov-5' --gcov-options '\-lp'
    #env:
      #- COMPILER=g++-5
      #- CXX_STANDARD=11
      #- CMAKE_OPTIONS=-Dpfs_json_COVERAGE=ON

before_script:
  - if [ "${COMPILER}" != "" ]; then export CXX=${COMPILER}; fi
  - uname -a
  - $CXX --version
  - mkdir -p build && cd build
  - cmake -G Ninja -DCMAKE_CXX_STANDARD=${CXX_STANDARD} -Dpfs-rfc5870_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release ${CMAKE_OPTIONS} ..

script:
  - cmake --build .
  - ctest --output-on-failure

notifications:
  email: false
